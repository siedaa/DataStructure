#include<iostream>
using namespace std;

bool issafe (int **board , int x , int y , int n) {
    if (x<n && y< n && board[x][y] ==1) {
        return true;

    }
    return false;
}


bool mazeEscape (int ** board  , int x , int y ,int n , int** Sol) {
    if (x == (n-1) && y == (n-1) ){
        Sol[x][y]  = 1;
        return true;
    }

if (issafe (board , x , y ,n)) {
    Sol[x][y] = 1; 
       if (mazeEscape (board , x+1, y , n , Sol ) ) 
       {return true;
       }

       else if (mazeEscape (board , x , y+1 , n ,Sol)) return true;
else {
    Sol[x][y] =0;
    return false;
}
    }
    return false;
}



int main () {
    int n=4;
    int ** arr = new int*[n];
    for (int i=0;i<4;i++)  {
        arr[i] =  new int[n];
    }

    int temp [4][4] = {
        1 , 1,0 , 1,
        0 , 1 , 1 , 0 ,
        1 , 1 ,  0 , 1 ,
        0 , 1, 1 , 1
    };


    for (int i=0;i<n;i++) {
        for (int j=0;j<n;j++) {
            arr[i][j] = temp[i][j];
        }

    }

    int **solArr = new int *[n];
    for (int i=0;i<n;i++) {
        solArr[i] =  new int[n];
        for (int j=0;j<n;j++) {
            solArr[i][j] = 0;
        }
    }

    if (mazeEscape(arr , 0 , 0 , n , solArr)) {
        for (int i=0;i<n;i++) {
            for (int j=0;j<n;j++) {
                cout<< solArr[i][j] << " " ;
            }
            cout<<endl;
        }
    }


    for (int i=0;i<n;i++) {
            delete[] arr[i];
            delete[] solArr[i];
        }
    
     delete[] arr;
     delete[] solArr;

}
