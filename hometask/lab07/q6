#include <iostream>
#include <string>
using namespace std;

struct Employee {
    string name;
    int id;
    int salary;
};

// Merge two halves
void merge(Employee arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;

    Employee L[n1], R[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    int i = 0, j = 0, k = left;

    // Sort by salary (descending)
    while (i < n1 && j < n2) {
        if (L[i].salary >= R[j].salary) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    // Copy remaining
    while (i < n1) arr[k++] = L[i++];
    while (j < n2) arr[k++] = R[j++];
}

// Merge Sort
void mergeSort(Employee arr[], int left, int right) {
    if (left < right) {
        int mid = (left + right) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        merge(arr, left, mid, right);
    }
}

// Display records
void display(Employee arr[], int n) {
    cout << "Name\tID\tSalary\n";
    for (int i = 0; i < n; i++)
        cout << arr[i].name << "\t" << arr[i].id << "\t" << arr[i].salary << endl;
}

int main() {
    Employee emp[12] = {
        {"raza",10,84000}, {"kinza",323,80000}, {"sana",211,63000},
        {"ali",191,56000}, {"zahid",345,54000}, {"zohaib",477,49000},
        {"yasir",156,47000}, {"moiz",122,39000}, {"saba",121,32000},
        {"laila",909,28000}, {"shama",100,24000}, {"saba",123,12000}
    };

    int n = 12;

    mergeSort(emp, 0, n-1);

    cout << "\nEmployees Sorted by Salary (Descending):\n";
    display(emp, n);

    cout << "\nTop 3 Highest Paid Employees:\n";
    cout << "Rank\tName\tID\tSalary\n";
    for(int i = 0; i < 3; i++)
        cout << i+1 << "\t" << emp[i].name << "\t" << emp[i].id << "\t" << emp[i].salary << endl;

    return 0;
}
