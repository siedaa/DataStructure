#include <iostream>
using namespace std;

// Bubble Sort function
void bubbleSort(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) {
                // Swap
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
        }
    }
}

// Interpolation Search function
int interpolationSearch(int arr[], int size, int x) {
    int low = 0;
    int high = size - 1;

    while (low <= high && x >= arr[low] && x <= arr[high]) {
        if (low == high) {
            if (arr[low] == x) return low;
            return -1;
        }

        // Estimate the position
        int pos = low + ((x - arr[low]) * (high - low)) / (arr[high] - arr[low]);

        // Check if the estimated position has the target value
        if (arr[pos] == x) return pos;

        // If the target value is greater, ignore the left half
        if (arr[pos] < x)
            low = pos + 1;
        // If the target value is smaller, ignore the right half
        else
            high = pos - 1;
    }
    return -1;
}

int main() {
    int size;
    cout << "Enter size of array: ";
    cin >> size;

    int arr[size];
    cout << "Enter " << size << " elements: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }

    // Sort the array
    bubbleSort(arr, size);

    cout << "Sorted Array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    int x;
    cout << "Enter the value to search: ";
    cin >> x;

    int index = interpolationSearch(arr, size, x);

    if (index != -1)
        cout << "Element found at index " << index << endl;
    else
        cout << "Element not found in the array" << endl;

    return 0;
}
